# Generated by Django 5.1.1 on 2025-04-14 13:58

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=20, verbose_name='نام کاربر')),
                ('last_name', models.CharField(max_length=20, verbose_name='نام خانوادگی کاربر')),
                ('phone_number', models.CharField(max_length=15, primary_key=True, serialize=False, verbose_name='شماره تلفن کاربر')),
                ('is_verified', models.BooleanField(default=False, verbose_name='وضعیت تایید شدن شماره تلغن')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='آیپی کاربر هنگام ثبت نام')),
                ('register_time', models.DateTimeField(auto_now=True, verbose_name='زمان ثبت نام')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='آیدی محصول')),
                ('photo', models.ImageField(upload_to='prdphotos', verbose_name='عکس محصول')),
                ('kind', models.CharField(choices=[('akbari', 'اکبری'), ('fandoghi', 'فندوقی'), ('ahmadaghaii', 'احمد آقایی'), ('kaleghoochi', 'کله قوچی'), ('shahpasand', 'شاه پسند'), ('sefid', 'سفید'), ('badami', 'بادامی'), ('khanjari', 'خنجری')], max_length=20, verbose_name='نوع پسته')),
                ('status', models.CharField(choices=[('khandan', 'خندان'), ('dahanbast', 'دهن بست'), ('abkhandan', 'آب خندان'), ('tarkibi', 'ترکیبی')], max_length=20, verbose_name='وضعیت محصول')),
                ('ounce', models.PositiveIntegerField(verbose_name='انس محصول')),
                ('quality', models.CharField(choices=[('excellent', 'عالی'), ('good', 'خوب'), ('average', 'متوسط'), ('bad', 'بد')], max_length=20, verbose_name='(کیفی) کیفیت محصول')),
                ('price', models.DecimalField(decimal_places=0, max_digits=13, verbose_name='(تومان) قیمت محصول')),
                ('show_inventory', models.BooleanField(default=True, verbose_name='وضعیت نمایش وزن محصول')),
                ('inventory', models.FloatField(verbose_name='وزن محصول')),
                ('is_pestina_product', models.BooleanField(default=False, verbose_name='محصول پستینا')),
                ('is_confirmed', models.BooleanField(default=False, verbose_name='وضعیت تایید شدن توسط ادمین')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='آیپی')),
                ('upload_time', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ثبت محصول')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='کاربر')),
            ],
        ),
        migrations.CreateModel(
            name='BuyTicket',
            fields=[
                ('ticket_id', models.AutoField(primary_key=True, serialize=False, verbose_name='شماره سفارش')),
                ('buyer_namelastname', models.CharField(max_length=30, verbose_name='نام خریدار')),
                ('buyer_phone', models.CharField(max_length=20, verbose_name='شماره تلفن')),
                ('gain_product', models.FloatField(verbose_name='مقدار (به کیلو)')),
                ('order_discription', models.CharField(blank=True, max_length=400, null=True, verbose_name='توضیحات سفارش')),
                ('calculated_price', models.FloatField(verbose_name='قیمت نهایی')),
                ('ticket_time', models.DateTimeField(auto_now=True, verbose_name='تاریخ سفارش')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='آیپی')),
                ('pistachio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product', verbose_name='محصول سفارش داده شده')),
            ],
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('ticket_id', models.AutoField(primary_key=True, serialize=False, verbose_name='شماره تیکت')),
                ('buyer_namelastname', models.CharField(max_length=30, verbose_name='نام خریدار')),
                ('buyer_phone', models.CharField(max_length=20, verbose_name='شماره تلفن')),
                ('ticket_type', models.CharField(choices=[('feedback', 'نظرات و پیشنهادات'), ('purchase', 'درخواست خرید محصول'), ('technical', 'نقص فنی سایت')], max_length=20, verbose_name='نوع تیکت')),
                ('request_title', models.CharField(max_length=20, verbose_name='عنوان تیکت')),
                ('request_discription', models.CharField(max_length=150, verbose_name='متن درخواست')),
                ('ticket_time', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ثبت تیکت')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='أیپی')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='کاربر')),
            ],
        ),
    ]
